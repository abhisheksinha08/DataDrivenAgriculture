install.library("mlbench")
install.packages("mlbench")
library(mlbench)
data(BreastCancer)
br <- BreastCancer
?BreastCancer
data("AirPassengers")
?AirPassengers
AirPassengers
data("women")
women
data("sunspots")
sunspots
data("sleep")
sleep
data("islands")
islands
?islands
library(shiny)
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
75/(72*2.5/100)^2
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
72*2.5
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
runApp('~/code/data-product-project/BreastCancer')
install.packages("RODBC")
library(RODBC)
library(sqlR)
install.packages("sqlR")
library(mssqlR)
?mssqlR
?mssqlR::connect_entity_gen()
?connect_entity_gen()
dbHandle <- connect_entity_gen("ecompliancesuite.com","y_test","ad_admin","apds@iimc")
dbHandle <- connect_entity_gen("ecompliancesuite.com","y_test","ad_admin","apds@iimc")
numIds<- 1:1000
df=c(numIds)
df=data.frame(numIds)
df$x<-rnorm(1000)
head(df)
df$y<-(4*df$x)+df$numIds
head(df)
df<-numIds<-null
df<-numIds<-NULL
numIds<- 1:1000
df=data.frame(numIds)
df$x<-rnorm(1000)
df$y<-(4*df$x)+df$numIds
head(df)
df$numIds<-NULL
lm1 <- lm(y~x, data=df)
summary(lm1)
par(mfrow=c(2,2))
plot(lm1)
numIds<- 1:1000
df=data.frame(numIds)
df$x<-200*df$numIds
df$y<-10*df$x+rnorm(1000,mean=df$numIds)
head(df)
df$numIds<-NULL
lm1 <- lm(y~x, data=df)
summary(lm1)
par(mfrow=c(2,2))
plot(lm1)
numIds<- 1:1000
df=data.frame(numIds)
df$x<-df$numIds
head(df)
df$y<-10*df$x+rnorm(1000,mean=0, sd=1000^0.65)
head(df)
df$numIds<-NULL
lm1 <- lm(y~x, data=df)
summary(lm1)
par(mfrow=c(2,2))
plot(lm1)
set.seed(568)  # this makes the example exactly reproducible
n      = rep(1:100,2)
a      = 0
b      = 1
sigma2 = n^1.3
eps    = rnorm(n,mean=0,sd=sqrt(sigma2))
y      = a+b*n + eps
mod    = lm(y ~ n)
res    = residuals(mod)
plot(mod)
library(lmtest)
bptest(mod)
a<-1:10
scale(a)
a<-1:9
scale(a)
m <- mean(a)
sd<-sd(a)
m
sd
1/sd
color<-c("Red","Blue","Pink")
typeof(color)
color[1]
color[2]
as.factor(color)
color<-c("Red","Blue","Pink","Red","Red","Blue","Pink")
as.factor(color)
b<-as.factor(color)
as.numeric(b)
as.integer(b)
install.packages("nnet", destdir = "/Users/abhishek/Library/R/3.4/library/")
library(nnet)
library(memery)
install.packages("memery", destdir = "/Users/abhishek/Library/R/3.4/library/")
library(memery)
setwd("~/code/DataDrivenAgriculture")
library("dplyr")
library("ggplot2")
library("data.table")
#Load Yield Data
yield_db <- readxl::read_xlsx("Yield//Tidy_Data_1.xlsx", sheet = 1)
head(yield_db)
#Load Yield Data
yield_db <- as.data.frame(readxl::read_xlsx("Yield//Tidy_Data_1.xlsx", sheet = 1))
head(yield_db)
table(yield_db$Crop)
yield_db$Crop[yield_db$Crop=='Rice'] <-'Paddy'
table(yield_db$Crop)
table(yield_db$District)
